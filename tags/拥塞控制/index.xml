<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>拥塞控制 on Realjf&#39;s blog</title>
    <link>https://realjf.io/tags/%E6%8B%A5%E5%A1%9E%E6%8E%A7%E5%88%B6/</link>
    <description>Recent content in 拥塞控制 on Realjf&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 23 Apr 2020 17:31:45 +0800</lastBuildDate><atom:link href="https://realjf.io/tags/%E6%8B%A5%E5%A1%9E%E6%8E%A7%E5%88%B6/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>TCP协议流量控制与拥塞控制详解</title>
      <link>https://realjf.io/network/tcp-protocol/</link>
      <pubDate>Thu, 23 Apr 2020 17:31:45 +0800</pubDate>
      
      <guid>https://realjf.io/network/tcp-protocol/</guid>
      <description>TCP的主要特点  面向连接的运输层协议 可靠交付服务 提供全双工通信 面向字节流  连续ARQ协议  连续ARQ协议规定：发送方维持一个发送窗口，每收到一个确认，就把发送窗口向前滑动一个分组的位置。 接收方采用累积确认的方式，在收到几个分组后，对按序到达的最后一个分组发送确认。   MSS最大报文段长度
 滑动窗口协议 以字节为单位的滑动窗口。每个tcp活动连接的两端都维护一个发送窗口结构和接收窗口结构。tcp以字节为单位维护其窗口结构。 随着时间推移，当接收到返回的数据ack，滑动窗口也随之右移。
每个tcp报文段都包含ack号和窗口通告信息，tcp发送端可以据此调节窗口结构。
流量控制 所谓流量控制，就是让发送方的发送速率不要太快，要让接收方来得及接收，利用滑动窗口机制可以很方便在tcp连接上实现对发送方的流量控制。
图例说明下 TCP报文段发送机制  第一种机制是TCP维持一个tcp报文段发送出去 第二种机制是由发送方的应用进程指明要求发送报文段 第三种机制是发送方的一个计时器期限到了，这时就把当前已有的缓存数据装入报文段发送出去。  拥塞控制 拥塞控制原理 所谓拥塞控制就是防止过多的数据注入到网络中，这样就可以使网络中的路由器或链路不致过载。拥塞控制索要做的都有一个前提， 就是网络能够承受现有的网络负荷。拥塞控制是一个全局性的过程，涉及所有的主机、所有的路由器，以及与降低网络传输性能有关的所有因素。
流量控制往往是指点对点通信量的控制。
拥塞控制方法 拥塞控制是一个动态的问题，从大的方面看，可以分为开环控制和闭环控制两种方法。
开环控制 就是在设计网络时事先将有关发生拥塞的因素考虑周到，力求网络在工作时不产生拥塞。
闭环控制 闭环控制基于反馈环路，主要有以下几种措施：
 监测网络系统以便检测到拥塞在何时、何处发生。 把拥塞发生的信息传送到可采取行动的地方 调整网络系统的运行以解决出现的问题  拥塞控制的算法 tcp进行拥塞控制的算法有四种，即慢开始(slow-start)、拥塞避免(congestion avoidance)、快重传(fast retransmit)和快恢复(fast recovery)
慢开始和拥塞避免  发送方让自己的发送窗口等于拥塞窗口 判断网络出现拥塞的依据就是出现了超时
 慢开始算法思路：当主机开始发送数据时，由于并不清楚网络的负荷情况，所以如果立即把大量数据字节注入到网络，那么就有可能引起网络发生拥塞。 经验证明，较好的方法是先探测一下，即由小到大逐渐增大发送窗口，也就是说，由小到大逐渐增大拥塞窗口数值。
RFC5681规定初始拥塞窗口cwnd设置为不超过2至4个SMSS（最大报文段）的数值，具体如下：
 若SMSS&amp;gt;2190字节，则设置初始拥塞窗口cwnd=2xSMSS字节，且不得超过2个报文段。 若SMSS&amp;gt;1095且SMSS&amp;lt;=2190字节，则设置初始拥塞窗口cwnd=3xSMSS字节，且不得超过3个报文段。 若SMSS&amp;lt;=1095字节，则设置初始拥塞窗口cwnd=4xSMSS字节，且不得超过4个报文段。  慢开始规定：在每收到一个对新的报文段的确认后，可以把拥塞窗口增加最多一个SMSS的数值。即
拥塞窗口cwnd每次的增加量 = min(N,SMSS)
这里使用报文段的个数作为窗口大小的单位，来阐述拥塞控制原理
 因此，使用慢开始算法后，每经过一个传输轮次，拥塞窗口cwnd就加倍。
 为了防止拥塞窗口cwnd增长过大引起网络拥塞，还需要设置一个慢开始门限ssthresh状态变量。慢开始门限ssthresh用法如下：</description>
    </item>
    
  </channel>
</rss>
