<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mysql on Realjf&#39;s blog</title>
    <link>https://realjf.io/tags/mysql/</link>
    <description>Recent content in Mysql on Realjf&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 09 Dec 2020 16:03:48 +0800</lastBuildDate>
    
	<atom:link href="https://realjf.io/tags/mysql/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>使用数据库实现链表 Using Database to Realize Linkedlist</title>
      <link>https://realjf.io/mysql/using-database-to-realize-linkedlist/</link>
      <pubDate>Wed, 09 Dec 2020 16:03:48 +0800</pubDate>
      
      <guid>https://realjf.io/mysql/using-database-to-realize-linkedlist/</guid>
      <description>背景 今天遇到一个需求，在一个排队队列中，对第一个人员可以进行延后处理操作（实际是往后移动4位，到第5位），一开始想通过排序值 控制队列排序问题，但是容错性差，不能得到很好的效果，想来想去链表结构的特性对于插入删除O(1)的性能，可以很好的解决我的问题， 所以决定通过数据库表设计来实现一个链表。
 数据库：mysql 程序语言：php  实现 表结构简化成只有id和next指针的设计，next指向下一个成员的id。最后一个成员的next指向0。
表结构及数值如下： | id | next | |:&amp;mdash;:|:&amp;mdash;:| | 1 | 3 | | 2 | 1 | | 3 | 4 | | 4 | 5 | | 5 | 6 | | 6 | 0 |
整理成链表大致是这样的
2 --&amp;gt; 1 --&amp;gt; 3 --&amp;gt; 4 --&amp;gt; 5 --&amp;gt; 6 --&amp;gt; 0  最后的0代表链表结束。
按需求，如果第一个人员延后操作，需要向后移动4位，步骤是这样的：
首先将队列所有人员从数据库中取出，然后在程序中按照链表结构排序，排序程序如下
static public function sort($queue) { if (!</description>
    </item>
    
    <item>
      <title>mysql Explain 详解</title>
      <link>https://realjf.io/mysql/explain-analysis/</link>
      <pubDate>Thu, 14 May 2020 09:10:02 +0800</pubDate>
      
      <guid>https://realjf.io/mysql/explain-analysis/</guid>
      <description>explain 输出列    列名 JSON 名 说明     id select_id The SELECT identifier   select_type None The SELECT type   table table_name The table for the output row   partitions partitions The matching partitions   type access_type The join type   possible_keys possible_keys The possible indexes to choose   key key The index actually chosen   key_len key_length The length of the chosen key   ref ref The columns compared to the index   rows rows Estimate of rows to be examined   filtered filtered Percentage of rows filtered by table condition   Extra None Additional information    id select 标识</description>
    </item>
    
    <item>
      <title>Mysql 5.7.27源码安装教程</title>
      <link>https://realjf.io/posts/mysql-5.7-installation/</link>
      <pubDate>Tue, 15 Oct 2019 09:11:41 +0800</pubDate>
      
      <guid>https://realjf.io/posts/mysql-5.7-installation/</guid>
      <description>准备  debian 9操作系统 mysql下载地址：https://downloads.mysql.com/archives/get/file/mysql-5.7.27.tar.gz boost下载地址：http://nchc.dl.sourceforge.net/project/boost/boost/1.59.0/boost_1_59_0.tar.gz  下载安装 1. 下载安装boost wget http://nchc.dl.sourceforge.net/project/boost/boost/1.59.0/boost_1_59_0.tar.gz tar zxvf boost_1_59_0.tar.gz mv boost_1_59_0 /usr/local/boost  2. 下载安装mysql # 安装依赖包 apt-get install libncurses-dev # 创建mysql用户组和用户 groupadd mysql useradd mysql -s /sbin/nologin -M -g mysql # 下载mysql wget https://downloads.mysql.com/archives/get/file/mysql-5.7.27.tar.gz tar zxvf mysql-5.7.27.tar.gz cd mysql-5.7.27 # 创建必要的文件夹 mkdir /usr/local/mysql mkdir /usr/local/mysql/data # 数据库文件 mkdir /usr/local/mysql/tmp # sock文件 mkdir /usr/local/mysql/logs # 错误日志文件 mkdir /usr/local/mysql/binlog # binlog日志文件 # 编译mysql cmake .</description>
    </item>
    
    <item>
      <title>Mysql Community Server Installation(mysql 8.0.17 社区版本安装教程)</title>
      <link>https://realjf.io/posts/mysql-community-server-installation/</link>
      <pubDate>Mon, 14 Oct 2019 17:50:16 +0800</pubDate>
      
      <guid>https://realjf.io/posts/mysql-community-server-installation/</guid>
      <description>一、下载安装 下载地址：https://downloads.mysql.com/archives/community/
# 下载 wget https://downloads.mysql.com/archives/get/file/mysql-8.0.17-linux-glibc2.12-x86_64.tar.xz xz -d mysql-8.0.17-linux-glibc2.12-x86_64.tar.xz tar xvf mysql-8.0.17-linux-glibc2.12-x86_64.tar # 移动到你需要安装的目录下 mv mysql-8.0.17-linux-glibc2.12-x86_64 /usr/local/mysql  二、配置 1. 在mysql根目录下创建一个新的data目录，用于存放数据 cd /usr/local/mysql mkdir data  2. 创建mysql用户组和mysql用户 groupadd mysql useradd -g mysql mysql  3. 改变mysql目录权限 chown -R mysql.mysql /usr/local/mysql/  4. 初始化数据库 # 创建mysql_install_db安装文件 mkdir mysql_install_db chmod 777 ./mysql_install_db # 初始化数据库 bin/mysqld --initialize --user=mysql --basedir=/usr/local/mysql --datadir=/usr/local/mysql/data # 记录好自己的临时密码  5. mysql配置 cp /usr/local/mysql/support-files/mysql.server /etc/init.d/mysqld  修改my.cnf文件
vim /etc/my.</description>
    </item>
    
  </channel>
</rss>