<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>chunk file on Realjf&#39;s blog</title>
    <link>https://realjf.io/series/chunk-file/</link>
    <description>Recent content in chunk file on Realjf&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 13 Apr 2020 14:00:07 +0800</lastBuildDate><atom:link href="https://realjf.io/series/chunk-file/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>大文件分片上传 之 基于webuploader组件（Chunk Upload File）</title>
      <link>https://realjf.io/php/chunk-upload-file/</link>
      <pubDate>Mon, 13 Apr 2020 14:00:07 +0800</pubDate>
      
      <guid>https://realjf.io/php/chunk-upload-file/</guid>
      <description>针对大文件（上百兆或者好几个G的大文件上传，总是比较麻烦的，这里将介绍一个比较方便的解决方案
准备  百度的webuploader组件 lnmp或lamp开发环境  本次使用的是百度分享的分片js组件webuploader
同时后端使用php接收分片文件，并进行最后的组装。
第一步，首先下载webuploader插件 下载地址：https://github.com/fex-team/webuploader/releases
解压后文件结构如下：
├── Uploader.swf // SWF文件，当使用Flash运行时需要引入。  ├── webuploader.js // 完全版本。 ├── webuploader.min.js // min版本  ├── webuploader.custom.js ├── webuploader.nolog.js  ├── webuploader.flashonly.js // 只有Flash实现的版本。 ├── webuploader.flashonly.min.js // min版本  ├── webuploader.html5only.js // 只有Html5实现的版本。 ├── webuploader.html5only.min.js // min版本  ├── webuploader.withoutimage.js // 去除图片处理的版本，包括HTML5和FLASH. └── webuploader.withoutimage.min.js // min版本 下载 第二步，创建一个html页面，引入一下文件 &amp;lt;link href=&amp;#34;/resource/webuploader/webuploader.css&amp;#34; rel=&amp;#34;stylesheet&amp;#34; /&amp;gt; &amp;lt;script src=&amp;#34;/resource/webuploader/webuploader.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; 页面内容如下：
&amp;lt;div id=&amp;#34;uploader&amp;#34; class=&amp;#34;wu-example&amp;#34;&amp;gt;  &amp;lt;div id=&amp;#34;uploader&amp;#34; class=&amp;#34;wu-example&amp;#34;&amp;gt;  &amp;lt;!</description>
    </item>
    
  </channel>
</rss>
