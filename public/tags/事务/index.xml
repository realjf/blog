<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>事务 on Realjf&#39;s blog</title>
    <link>https://realjf.io/tags/%E4%BA%8B%E5%8A%A1/</link>
    <description>Recent content in 事务 on Realjf&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 28 Apr 2020 14:42:50 +0800</lastBuildDate>
    
	<atom:link href="https://realjf.io/tags/%E4%BA%8B%E5%8A%A1/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>mysql 事务 Transaction</title>
      <link>https://realjf.io/mysql/transaction/</link>
      <pubDate>Tue, 28 Apr 2020 14:42:50 +0800</pubDate>
      
      <guid>https://realjf.io/mysql/transaction/</guid>
      <description>mysql存储引擎与事务：  1.myisam：不支持事务，用于只读程序提高性能 2. innodb：支持acid事务、行级锁、并发 3. berkeley db：支持事务。  一个事务是一个连续的一组数据库操作，就好像一个单一的工作单元进行。 如果在事务的任何操作失败，则整个事务将失败。
事务的特性： 事务有以下四个标准属性的缩写acid，通常被称为：
 原子性：确保工作单元内的所有操作都完成，否则事务将被终止在故障点，和以前的操作将回滚到以前的状态。 一致性：确保数据库正确地改变状态后，成功提交的事务。 隔离性：使事务操作彼此独立的和透明的。 持久性：确保提交的事务的结果或效果的系统出现故障的情况下仍然存在。  在MySQL中，事务开始使用COMMIT或ROLLBACK语句开始工作和结束。开始和结束语句的SQL命令之间形成了大量的事务。
COMMIT &amp;amp; ROLLBACK: 这两个关键字提交和回滚主要用于MySQL的事务。
当一个成功的事务完成后，发出COMMIT命令应使所有参与表的更改才会生效。
如果发生故障时，应发出一个ROLLBACK命令返回的事务中引用的每一个表到以前的状态。
可以控制的事务行为称为AUTOCOMMIT设置会话变量。如果AUTOCOMMIT设置为1（默认值），然后每一个SQL语句（在事务与否）被认为是一个完整的事务，并承诺在默认情况下，当它完成。 AUTOCOMMIT设置为0时，发出SET AUTOCOMMIT =0命令，在随后的一系列语句的作用就像一个事务，直到一个明确的COMMIT语句时，没有活动的提交。
可以通过使用mysql_query()函数在PHP中执行这些SQL命令。
事务 ACID Atomicity（原子性）、Consistency（稳定性）、Isolation（隔离性）、Durability（可靠性） 1、事务的原子性 一组事务，要么成功；要么撤回。
2、稳定性 有非法数据（外键约束之类），事务撤回。
3、隔离性 事务独立运行。 一个事务处理后的结果，影响了其他事务，那么其他事务会撤回。 事务的100%隔离，需要牺牲速度。
4、可靠性 软、硬件崩溃后，InnoDB数据表驱动会利用日志文件重构修改。 可靠性和高速度不可兼得， innodb_flush_log_at_trx_commit选项 决定什么时候吧事务保存到日志里。
开启事务 START TRANSACTION 或 BEGIN
提交事务（关闭事务） COMMIT
放弃事务（关闭事务） ROLLBACK
折返点 SAVEPOINT adqoo_1 ROLLBACK TO SAVEPOINT adqoo_1 发生在折返点 adqoo_1 之前的事务被提交，之后的被忽略
事务的终止
设置“自动提交”模式 SET AUTOCOMMIT = 0 每条SQL都是同一个事务的不同命令，之间由 COMMIT 或 ROLLBACK隔开 掉线后，没有 COMMIT 的事务都被放弃 事务锁定模式</description>
    </item>
    
  </channel>
</rss>